#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include <Adafruit_NeoPixel.h>

#define LED_PIN D2   // 連接 WS2812 LED 的腳位
#define LED_COUNT 8  // LED 燈條的 LED 數量

Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

const char* ssid = "lyuchan2.4";
const char* password = "david0831";
WiFiUDP udp;
unsigned int localUdpPort = 8080;

void setup() {
  strip.begin();
  strip.show();  // 初始化 LED 燈條，並將所有 LED 關閉
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  udp.begin(localUdpPort);
}

void loop() {
  int packetSize = udp.parsePacket();
  if (packetSize) {
    Serial.printf("Received %d bytes from %s, port %d\n", packetSize, udp.remoteIP().toString().c_str(), udp.remotePort());
    char packetBuffer[packetSize + 1];
    int len = udp.read(packetBuffer, packetSize);
    packetBuffer[len] = 0;

    Serial.printf("UDP packet contents: %s\n", packetBuffer);
    if (strcmp(packetBuffer, "ping") == 0) {
      udp.beginPacket(udp.remoteIP(), udp.remotePort());
      udp.write("pong!");
      udp.endPacket();
      Serial.println("pong!");
    }
    if (strcmp(packetBuffer, "red") == 0) {
      light(255, 0, 0);
    }
    if (strcmp(packetBuffer, "green") == 0) {
      light(0, 255, 0);
    }
    if (strcmp(packetBuffer, "yellow") == 0) {
      light(255, 255, 0);
    }
    if (strcmp(packetBuffer, "off") == 0) {
      light(0, 0, 0);
    }
    if (strcmp(packetBuffer, "find") == 0) {
      flashWhite(10);
    }
  }
}
void light(int r, int g, int b) {
  for (int i = 0; i < LED_COUNT; i++) {
    strip.setPixelColor(i, strip.Color(r, g, b));
  }
  strip.show();
}
void light(uint32_t color) {
   for (int i = 0; i < LED_COUNT; i++) {
    strip.setPixelColor(i, color);
  }
  strip.show();
}
void flashWhite(int numFlashes) {
  uint32_t color = strip.getPixelColor(0);
  for (int i = 0; i < numFlashes; i++) {
    light(255, 255, 255);
    delay(50);  // 等待 0.1 秒
    light(0, 0, 0);
    delay(50);  // 等待 0.1 秒
  }
  light(color);
}
